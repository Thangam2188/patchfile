name: Post PR Patch Install Trigger

on:
  push:
    branches:
      - main
    paths:
      - '*_patches.txt'

jobs:
  trigger_patch_installation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl jq oathtool
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -o awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: Generate MFA Code and Get Temporary Credentials
        id: mfa_creds
        env:
          MFA_SECRET: ${{ secrets.MFA_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MFA_SERIAL_ARN: arn:aws:iam::472598590798:mfa/TESTGIT1
        run: |
          MFA_CODE=$(oathtool --base32 --totp "$MFA_SECRET")
          TEMP_CREDS=$(aws sts get-session-token \
            --serial-number $MFA_SERIAL_ARN \
            --token-code $MFA_CODE \
            --duration-seconds 3600)

          echo "AWS_ACCESS_KEY_ID=$(echo $TEMP_CREDS | jq -r '.Credentials.AccessKeyId')" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $TEMP_CREDS | jq -r '.Credentials.SecretAccessKey')" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $TEMP_CREDS | jq -r '.Credentials.SessionToken')" >> $GITHUB_ENV

      - name: Invoke Lambda for Each Patch File
        env:
          AWS_DEFAULT_REGION: us-east-1
        run: |
          mkdir -p lambda_results

          for file in *_patches.txt; do
            echo "Processing $file"

            # Convert plain text patch data to valid JSON format
            jq -Rs '{patch_report: .}' "$file" > temp_payload.json

            aws lambda invoke \
              --function-name installSecurityPatches \
              --payload file://temp_payload.json \
              --cli-binary-format raw-in-base64-out \
              "lambda_results/result_${file%.txt}.json"

            echo "✔️ Invoked Lambda for $file"
          done

      - name: Commit Lambda Results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

          git add lambda_results/
          git commit -m "Add Lambda patch results after install" || echo "No changes to commit"
          git push origin HEAD:main
