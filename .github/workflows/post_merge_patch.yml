name: Invoke Patch Installation via Lambda After PR Merge

on:
  push:
    branches:
      - main  # Run only when a PR is merged into main

jobs:
  invoke_lambda_install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y oathtool jq unzip curl
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -o awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: Generate MFA Code and Get Temporary AWS Credentials
        id: mfa_creds
        env:
          MFA_SECRET: ${{ secrets.MFA_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MFA_SERIAL_ARN: arn:aws:iam::472598590798:mfa/TESTGIT1
        run: |
          MFA_CODE=$(oathtool --base32 --totp "$MFA_SECRET")
          echo "Generated MFA Code: $MFA_CODE"

          TEMP_CREDS=$(aws sts get-session-token \
            --serial-number "$MFA_SERIAL_ARN" \
            --token-code "$MFA_CODE" \
            --duration-seconds 3600 \
            --output json)

          echo "AWS_ACCESS_KEY_ID=$(echo $TEMP_CREDS | jq -r '.Credentials.AccessKeyId')" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $TEMP_CREDS | jq -r '.Credentials.SecretAccessKey')" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $TEMP_CREDS | jq -r '.Credentials.SessionToken')" >> $GITHUB_ENV

      - name: Configure AWS CLI with Temporary Credentials
        run: |
          mkdir -p ~/.aws
          echo "[temp-mfa]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ env.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ env.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "aws_session_token=${{ env.AWS_SESSION_TOKEN }}" >> ~/.aws/credentials
          aws configure set region us-east-1 --profile temp-mfa

      - name: Invoke Lambda to Install Security Patches
        env:
          AWS_PROFILE: temp-mfa
        run: |
          echo "Invoking Lambda function installSecurityPatches..."
          aws lambda invoke \
            --function-name installSecurityPatches \
            --payload file://instance_patches.txt \
            --cli-binary-format raw-in-base64-out \
            patch_results.json \
            --profile temp-mfa

          echo "Patch installation invoked. Contents of Lambda result:"
          cat patch_results.json

      - name: Commit and Push Patch Results
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add patch_results.json
          git commit -m "Patch install result from Lambda" || echo "No changes to commit"
          git pull --rebase
          git push origin HEAD:main
