name: Copy Patch Script & Scan File to Windows EC2 Instances

on:
  workflow_dispatch:

jobs:
  copy_patch_files:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v2

      # 2. Install AWS CLI and dependencies
      - name: Install AWS CLI & tools
        run: |
          sudo apt-get update
          sudo apt-get install -y oathtool jq unzip curl
          curl -sL "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o awscliv2.zip
          unzip -oq awscliv2.zip
          sudo ./aws/install --update
          aws --version

      # 3. Get temporary AWS credentials using MFA
      - name: Get temporary AWS credentials via MFA
        id: mfa
        env:
          MFA_SECRET: ${{ secrets.MFA_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MFA_SERIAL_ARN: arn:aws:iam::472598590798:mfa/TESTGIT1
        run: |
          MFA_CODE=$(oathtool --base32 --totp "$MFA_SECRET")
          CREDS=$(aws sts get-session-token \
            --serial-number "$MFA_SERIAL_ARN" \
            --token-code "$MFA_CODE" \
            --duration-seconds 3600 \
            --output json)

          echo "AWS_ACCESS_KEY_ID=$(jq -r '.Credentials.AccessKeyId' <<<"$CREDS")" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(jq -r '.Credentials.SecretAccessKey' <<<"$CREDS")" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(jq -r '.Credentials.SessionToken' <<<"$CREDS")" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV

      # 4. Copy patch script and scan file using SSM
      - name: Copy patch files to Windows EC2
        env:
          AWS_ACCESS_KEY_ID:     ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN:     ${{ env.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION:    ${{ env.AWS_DEFAULT_REGION }}
        run: |
          if [[ ! -f Instance_windows.txt ]]; then
            echo "❌ File 'Instance_windows.txt' not found."
            exit 1
          fi

          SCRIPT_URL="https://raw.githubusercontent.com/Thangam2188/patchfile/main/install_windows_patches.ps1"

          while IFS= read -r INSTANCE_ID || [[ -n "$INSTANCE_ID" ]]; do
            echo "▶ Copying to $INSTANCE_ID"

            PATCHSCAN_FILE="i-${INSTANCE_ID}_patchscan.txt"
            PATCHSCAN_URL="https://raw.githubusercontent.com/Thangam2188/patchfile/main/${PATCHSCAN_FILE}"

            aws ssm send-command \
              --instance-ids "$INSTANCE_ID" \
              --document-name "AWS-RunPowerShellScript" \
              --comment "Copy patch script and scan file" \
              --parameters "{\"commands\":[
                \"New-Item -Path 'C:\\\\Windows\\\\System32\\\\Patch\\\\Execution' -ItemType Directory -Force\",
                \"Invoke-WebRequest -Uri '$SCRIPT_URL' -OutFile 'C:\\\\Windows\\\\System32\\\\Patch\\\\Execution\\\\install_windows_patches.ps1'\",
                \"Invoke-WebRequest -Uri '$PATCHSCAN_URL' -OutFile 'C:\\\\Windows\\\\System32\\\\Patch\\\\${PATCHSCAN_FILE}'\"
              ]}" \
              --timeout-seconds 600 \
              --output text
          done < Instance_windows.txt
