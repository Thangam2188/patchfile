name: Upload Windows Patch Scripts to EC2

on:
  workflow_dispatch:

jobs:
  upload_windows_scripts:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v2

      - name: 🛠 Install AWS CLI & dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y oathtool jq curl unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o awscliv2.zip
          unzip -o awscliv2.zip && sudo ./aws/install --update
      - name: 🔑 Get temporary AWS creds via MFA
        id: mfa
        env:
          MFA_SECRET: ${{ secrets.MFA_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MFA_SERIAL_ARN: arn:aws:iam::472598590798:mfa/TESTGIT1
        run: |
          MFA_CODE=$(oathtool --base32 --totp "$MFA_SECRET")
          CREDS=$(aws sts get-session-token \
            --serial-number "$MFA_SERIAL_ARN" \
            --token-code "$MFA_CODE" \
            --duration-seconds 3600 \
            --output json)
          echo "AWS_ACCESS_KEY_ID=$(jq -r .Credentials.AccessKeyId<<<"$CREDS")"  >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(jq -r .Credentials.SecretAccessKey<<<"$CREDS")" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(jq -r .Credentials.SessionToken<<<"$CREDS")"     >> $GITHUB_ENV
      - name: ⚙️ Configure AWS CLI profile
        run: |
          aws configure set aws_access_key_id     "$AWS_ACCESS_KEY_ID"     --profile temp
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY" --profile temp
          aws configure set aws_session_token     "$AWS_SESSION_TOKEN"     --profile temp
          aws configure set region                us-east-1                --profile temp

      - name: 🚀 Deploy installer & scan file via SSM
        shell: bash
        env:
          AWS_PROFILE: temp
        run: |
          mkdir -p tmp-ssm
          BASE_URL="https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/main"

          while IFS= read -r INSTANCE_ID || [[ -n "$INSTANCE_ID" ]]; do
            echo "📤 Deploying to $INSTANCE_ID"

            # build a temp JSON file that is guaranteed to be valid
            jq -n \
              --arg url     "$BASE_URL/install_windows_patches.ps1" \
              --arg scanurl "$BASE_URL/${INSTANCE_ID}_patchscan.txt" \
              --arg inst    "$INSTANCE_ID" \
              '{
                commands: [
                  "New-Item -Path \"C:\\Windows\\System32\\Patch\\Execution\" -ItemType Directory -Force",
                  ("Invoke-WebRequest -Uri \"\($url)\" -OutFile \"C:\\Windows\\System32\\Patch\\Execution\\install_windows_patches.ps1\""),
                  ("Invoke-WebRequest -Uri \"\($scanurl)\" -OutFile \"C:\\Windows\\System32\\Patch\\Execution\\\($inst)_patchscan.txt\""),
                  "Unblock-File -Path \"C:\\Windows\\System32\\Patch\\Execution\\*.ps1\""
                ]
              }' > tmp-ssm/${INSTANCE_ID}.json

            aws ssm send-command \
              --instance-ids    "$INSTANCE_ID" \
              --document-name   AWS-RunPowerShellScript \
              --comment         "Drop scripts to C:\\Windows\\System32\\Patch\\Execution" \
              --parameters      file://tmp-ssm/${INSTANCE_ID}.json \
              --output          text

          done < Instance_windows.txt
