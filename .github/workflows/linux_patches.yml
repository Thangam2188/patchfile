---
name: Run Security Patches Check and Commit Output
on:
  workflow_dispatch: {}
  schedule:
    - cron: 0 0 * * 1
jobs:
  run_patches_script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: >
          sudo apt-get update

          sudo apt-get install -y oathtool jq unzip curl

          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"

          unzip -o awscliv2.zip

          sudo ./aws/install --update

          aws --version
      - name: Generate MFA Code and Get Temporary AWS Credentials
        id: mfa_creds
        env:
          MFA_SECRET: ${{ secrets.MFA_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MFA_SERIAL_ARN: arn:aws:iam::472598590798:mfa/TESTGIT1
          AWS_DEFAULT_REGION: us-east-1
        run: >
          MFA_CODE=$(oathtool --base32 --totp "$MFA_SECRET")

          echo "Generated MFA Code: $MFA_CODE"


          TEMP_CREDS=$(aws sts get-session-token --serial-number $MFA_SERIAL_ARN --token-code $MFA_CODE --duration-seconds 3600 --output json)

          echo "AWS_ACCESS_KEY_ID=$(echo $TEMP_CREDS | jq -r '.Credentials.AccessKeyId')" >> $GITHUB_ENV

          echo "AWS_SECRET_ACCESS_KEY=$(echo $TEMP_CREDS | jq -r '.Credentials.SecretAccessKey')" >> $GITHUB_ENV

          echo "AWS_SESSION_TOKEN=$(echo $TEMP_CREDS | jq -r '.Credentials.SessionToken')" >> $GITHUB_ENV
      - name: Configure AWS CLI with Temporary Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: us-east-1
        run: >
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile temp-mfa

          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile temp-mfa

          aws configure set aws_session_token $AWS_SESSION_TOKEN --profile temp-mfa

          aws configure set region us-east-1 --profile temp-mfa
      - name: Upload and Execute Patch Script on EC2
        env:
          AWS_PROFILE: temp-mfa
        run: >
          INSTANCE_ID=$(cat instance.txt)


          echo "Uploading and installing patch script on EC2..."

          SCRIPT_CONTENT=$(cat check_security_patches.sh | base64 | tr -d '\n')


          COMMAND_ID=$(aws ssm send-command \
            --instance-ids $INSTANCE_ID \
            --document-name "AWS-RunShellScript" \
            --comment "Install patch script" \
            --parameters commands="echo $SCRIPT_CONTENT | base64 -d > /tmp/check_security_patches.sh && sudo mv /tmp/check_security_patches.sh /usr/bin/check_security_patches.sh && sudo chmod +x /usr/bin/check_security_patches.sh" \
            --query "Command.CommandId" \
            --output text)

          aws ssm wait command-executed --command-id $COMMAND_ID --instance-id $INSTANCE_ID

          echo "Patch script uploaded and installed."
      - name: Run Patch Check Script on EC2
        env:
          AWS_PROFILE: temp-mfa
        run: >
          INSTANCE_ID=$(cat instance.txt)

          RESULT_FILE="/usr/bin/security_patches.txt"


          COMMAND_ID=$(aws ssm send-command \
            --instance-ids $INSTANCE_ID \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=[
              "sudo /usr/bin/check_security_patches.sh",
              "sudo chmod 644 /usr/bin/security_patches.txt"
            ]' \
            --query "Command.CommandId" \
            --output text)

          aws ssm wait command-executed --command-id $COMMAND_ID --instance-id $INSTANCE_ID


          FILE_CONTENTS_COMMAND_ID=$(aws ssm send-command \
            --instance-ids $INSTANCE_ID \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=["sudo cat /usr/bin/security_patches.txt"]' \
            --query "Command.CommandId" \
            --output text)
          aws ssm wait command-executed --command-id $FILE_CONTENTS_COMMAND_ID --instance-id $INSTANCE_ID

          FILE_CONTENTS=$(aws ssm get-command-invocation \
            --command-id $FILE_CONTENTS_COMMAND_ID \
            --instance-id $INSTANCE_ID \
            --query "StandardOutputContent" \
            --output text)
          echo "$FILE_CONTENTS" > ./security_patches.txt
      - name: Commit and Push Patch Output
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          git config --global user.name "github-actions[bot]"

          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

          git add security_patches.txt

          git commit -m "Add patch output from security check" || echo "No changes to commit"

          git push origin HEAD:main
