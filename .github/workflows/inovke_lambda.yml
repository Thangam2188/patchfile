name: Invoke Lambda with MFA

on:
  workflow_dispatch:

jobs:
  invoke_lambda:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli oathtool jq

      - name: Generate MFA Code and Get Temporary AWS Credentials
        id: mfa_creds
        env:
          MFA_SECRET: ${{ secrets.MFA_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MFA_SERIAL_ARN: "arn:aws:iam::472598590798:mfa/TESTGIT1"
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          # Generate the MFA code using oathtool
          MFA_CODE=$(oathtool --base32 --totp "$MFA_SECRET")
          echo "Generated MFA Code: $MFA_CODE"

          # Attempt to get temporary credentials
          TEMP_CREDS=$(aws sts get-session-token --serial-number $MFA_SERIAL_ARN --token-code $MFA_CODE --duration-seconds 3600 --output json)
          echo "AWS_ACCESS_KEY_ID=$(echo $TEMP_CREDS | jq -r '.Credentials.AccessKeyId')" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $TEMP_CREDS | jq -r '.Credentials.SecretAccessKey')" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $TEMP_CREDS | jq -r '.Credentials.SessionToken')" >> $GITHUB_ENV

      - name: Configure AWS CLI with Temporary Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile temp-mfa
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile temp-mfa
          aws configure set aws_session_token $AWS_SESSION_TOKEN --profile temp-mfa
          aws configure set region us-east-1 --profile temp-mfa


      - name: Invoke Lambda to Install Security Patches
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
        run: |
          echo "Invoking Lambda function InstallSecurityPatches..."
          aws lambda invoke \
              --function-name InstallSecurityPatches \
              --payload '{}' \
              response.json
          echo "Lambda response:"
          cat response.json
