      - name: Generate MFA Code and Get Temporary AWS Credentials
        id: mfa_creds
        env:
          MFA_SECRET: ${{ secrets.MFA_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MFA_SERIAL_ARN: "arn:aws:iam::472598590798:mfa/TESTGIT1"
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          # Generate the MFA code using oathtool
          MFA_CODE=$(oathtool --base32 --totp "$MFA_SECRET")
          echo "Generated MFA Code: $MFA_CODE"

          # Attempt to get temporary credentials and capture any errors
          TEMP_CREDS=$(aws sts get-session-token --serial-number $MFA_SERIAL_ARN --token-code $MFA_CODE --duration-seconds 3600 --output json 2>&1)
          STATUS=$?

          # Debugging: Print the result of aws sts get-session-token
          echo "TEMP_CREDS response: $TEMP_CREDS"

          # Check if the command was successful
          if [ $STATUS -ne 0 ]; then
            echo "Error obtaining temporary credentials: $TEMP_CREDS"
            exit $STATUS
          fi

          # Parse and set temporary credentials as outputs
          echo "::set-output name=aws_access_key_id::$(echo $TEMP_CREDS | jq -r '.Credentials.AccessKeyId')"
          echo "::set-output name=aws_secret_access_key::$(echo $TEMP_CREDS | jq -r '.Credentials.SecretAccessKey')"
          echo "::set-output name=aws_session_token::$(echo $TEMP_CREDS | jq -r '.Credentials.SessionToken')"


      - name: Configure AWS CLI with Temporary Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.mfa_creds.outputs.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.mfa_creds.outputs.aws_secret_access_key }}
          AWS_SESSION_TOKEN: ${{ steps.mfa_creds.outputs.aws_session_token }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          # Debugging: Print the environment variables to verify they have values
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"
          echo "AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN"

          # Ensure variables are not empty
          if [[ -z "$AWS_ACCESS_KEY_ID" || -z "$AWS_SECRET_ACCESS_KEY" || -z "$AWS_SESSION_TOKEN" ]]; then
            echo "Error: AWS credentials are missing."
            exit 1
          fi

          # Configure the AWS CLI profile
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile temp-mfa
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile temp-mfa
          aws configure set aws_session_token $AWS_SESSION_TOKEN --profile temp-mfa
          aws configure set region us-east-1 --profile temp-mfa
