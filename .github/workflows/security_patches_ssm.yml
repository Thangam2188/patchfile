name: Check Security Patches and Store in S3 with MFA

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1' # Run every Monday at midnight UTC

jobs:
  check_security_patches:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y oathtool jq awscli

      - name: Generate MFA Code and Get Temporary AWS Credentials
        id: mfa_creds
        env:
          MFA_SECRET: ${{ secrets.MFA_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MFA_SERIAL_ARN: "arn:aws:iam::472598590798:mfa/TESTGIT1"
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          # Generate the MFA code using oathtool
          MFA_CODE=$(oathtool --base32 --totp "$MFA_SECRET")
          echo "Generated MFA Code: $MFA_CODE"

          # Attempt to get temporary credentials and capture any errors
          TEMP_CREDS=$(aws sts get-session-token --serial-number $MFA_SERIAL_ARN --token-code $MFA_CODE --duration-seconds 3600 --output json)
          STATUS=$?

          # Debugging: Print the result of aws sts get-session-token
          echo "TEMP_CREDS response: $TEMP_CREDS"

          # Check if the command was successful
          if [ $STATUS -ne 0 ]; then
            echo "Error obtaining temporary credentials: $TEMP_CREDS"
            exit $STATUS
          fi

          # Parse and set temporary credentials as environment variables
          echo "AWS_ACCESS_KEY_ID=$(echo $TEMP_CREDS | jq -r '.Credentials.AccessKeyId')" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $TEMP_CREDS | jq -r '.Credentials.SecretAccessKey')" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $TEMP_CREDS | jq -r '.Credentials.SessionToken')" >> $GITHUB_ENV

      - name: Run check_security_patches.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: "us-east-1"
          BUCKET_NAME: "testpatchscript"
        run: |
          # Define the instance ID and output file path
          INSTANCE_ID="github-action-run"  # Identify that it's run from GitHub Actions
          OUTPUT_FILE="/tmp/security_patches.txt"

          echo "Starting security patch check script..." | tee -a /tmp/debug.log

          # Check for critical and important security patches and save the output
          echo "Checking for critical and important security patches..." | tee -a /tmp/debug.log
          if command -v yum &> /dev/null; then
              sudo yum updateinfo list security | grep -E 'Critical|Important' > $OUTPUT_FILE
              echo "Patch check completed with yum." | tee -a /tmp/debug.log
          elif command -v dnf &> /dev/null; then
              sudo dnf updateinfo list security | grep -E 'Critical|Important' > $OUTPUT_FILE
              echo "Patch check completed with dnf." | tee -a /tmp/debug.log
          else
              echo "Neither yum nor dnf are installed. Cannot perform patch check." > $OUTPUT_FILE
              echo "Error: No suitable package manager found." | tee -a /tmp/debug.log
          fi

          # Display contents of the output file for verification
          echo "Contents of $OUTPUT_FILE:" | tee -a /tmp/debug.log
          cat $OUTPUT_FILE | tee -a /tmp/debug.log

          # Upload the file to S3
          echo "Attempting to upload the patch report to S3..." | tee -a /tmp/debug.log
          aws s3 cp $OUTPUT_FILE s3://$BUCKET_NAME/$INSTANCE_ID/security_patches.txt --region us-east-1 | tee -a /tmp/debug.log

          # Check if the upload was successful
          if [ $? -eq 0 ]; then
              echo "File successfully uploaded to S3." | tee -a /tmp/debug.log
          else
              echo "Failed to upload the file to S3." | tee -a /tmp/debug.log
          fi
