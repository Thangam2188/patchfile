name: Run EC2 Patch Scan and Create PR

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'

jobs:
  check_patches:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Tools
        run: |
          sudo apt update
          sudo apt install -y oathtool jq unzip curl
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o awscliv2.zip
          unzip -o awscliv2.zip
          sudo ./aws/install --update

      - name: Generate MFA & Export AWS Creds
        id: creds
        env:
          MFA_SECRET: ${{ secrets.MFA_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MFA_SERIAL: arn:aws:iam::472598590798:mfa/TESTGIT1
        run: |
          CODE=$(oathtool --base32 --totp "$MFA_SECRET")
          CREDS=$(aws sts get-session-token \
            --serial-number $MFA_SERIAL --token-code $CODE \
            --duration-seconds 3600 --output json)

          echo "AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r '.Credentials.AccessKeyId')" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $CREDS | jq -r '.Credentials.SessionToken')" >> $GITHUB_ENV

      - name: Run Security Patch Script via SSM
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          : > combined_patch.txt
          while IFS= read -r INSTANCE_ID; do
            echo "Processing $INSTANCE_ID"
            CMD_ID=$(aws ssm send-command \
              --instance-ids "$INSTANCE_ID" \
              --document-name "AWS-RunShellScript" \
              --comment "Run patch script" \
              --parameters 'commands=["sudo /usr/bin/check_security_patches.sh"]' \
              --query "Command.CommandId" --output text)

            aws ssm wait command-executed --command-id "$CMD_ID" --instance-id "$INSTANCE_ID"

            FILE_CMD_ID=$(aws ssm send-command \
              --instance-ids "$INSTANCE_ID" \
              --document-name "AWS-RunShellScript" \
              --parameters 'commands=["cat /usr/bin/patchscript/instance_patches.txt"]' \
              --query "Command.CommandId" --output text)

            aws ssm wait command-executed --command-id "$FILE_CMD_ID" --instance-id "$INSTANCE_ID"

            CONTENT=$(aws ssm get-command-invocation \
              --command-id "$FILE_CMD_ID" --instance-id "$INSTANCE_ID" \
              --query "StandardOutputContent" --output text)

            echo -e "Instance: $INSTANCE_ID\n$CONTENT\n------------------" >> combined_patch.txt
            echo "$CONTENT" > "${INSTANCE_ID}_patches.txt"
          done < instance.txt

      - name: Create Pull Request with Patch Results
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: "Patch results from EC2 instances"
          title: "Weekly EC2 Patch Report"
          body: "This PR contains patch status files per EC2 instance."
          branch: patch-results-${{ github.run_number }}
