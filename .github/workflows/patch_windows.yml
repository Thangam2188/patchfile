name: Run Windows Patch Check and Commit Output

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'  # Every Monday at midnight UTC

jobs:
  windows_patch_check:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v2

      - name: 🛠 Install AWS CLI & deps
        run: |
          sudo apt-get update
          sudo apt-get install -y oathtool jq curl unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o awscliv2.zip
          unzip -o awscliv2.zip && sudo ./aws/install --update

      - name: 🔑 Get temporary AWS creds via MFA
        id: mfa
        env:
          MFA_SECRET: ${{ secrets.MFA_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MFA_SERIAL_ARN: arn:aws:iam::472598590798:mfa/TESTGIT1
        run: |
          MFA_CODE=$(oathtool --base32 --totp "$MFA_SECRET")
          CREDS=$(aws sts get-session-token \
            --serial-number "$MFA_SERIAL_ARN" \
            --token-code "$MFA_CODE" \
            --duration-seconds 3600 \
            --output json)
          echo "AWS_ACCESS_KEY_ID=$(jq -r .Credentials.AccessKeyId<<<"$CREDS")"  >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(jq -r .Credentials.SecretAccessKey<<<"$CREDS")" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(jq -r .Credentials.SessionToken<<<"$CREDS")"     >> $GITHUB_ENV

      - name: ⚙️ Configure AWS CLI profile
        run: |
          aws configure set aws_access_key_id     $AWS_ACCESS_KEY_ID     --profile temp
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile temp
          aws configure set aws_session_token     $AWS_SESSION_TOKEN     --profile temp
          aws configure set region                us-east-1              --profile temp

      - name: 🚀 Deploy & run patch check via SSM
        shell: bash -l {0}
        env:
          AWS_PROFILE: temp
        run: |
          # URL of your PowerShell checker
          GITHUB_PS1_URL="https://raw.githubusercontent.com/Thangam2188/patchfile/main/check_windows_patches.ps1"
          mkdir -p patch-results

          while IFS= read -r INSTANCE_ID || [[ -n "$INSTANCE_ID" ]]; do
            echo "➡️  Deploying to $INSTANCE_ID"

            COMMAND_ID=$(aws ssm send-command \
              --document-name "AWS-RunPowerShellScript" \
              --instance-ids "$INSTANCE_ID" \
              --parameters \
                commands="New-Item -Path 'C:\\Windows\\System32\\Patch' -ItemType Directory -Force","Invoke-WebRequest -Uri '$GITHUB_PS1_URL' -OutFile 'C:\\Windows\\System32\\Patch\\check_windows_patches.ps1'","C:\\Windows\\System32\\Patch\\check_windows_patches.ps1 -InstanceId $INSTANCE_ID" \
              --query "Command.CommandId" \
              --output text)

            echo "⏳ Waiting for SSM to finish..."
            aws ssm wait command-executed --command-id "$COMMAND_ID" --instance-id "$INSTANCE_ID"

            echo "📥 Fetching output..."
            aws ssm get-command-invocation \
              --command-id "$COMMAND_ID" \
              --instance-id "$INSTANCE_ID" \
              --query "StandardOutputContent" --output text \
              > patch-results/${INSTANCE_ID}_patches.txt

          done < Instance_windows.txt

      - name: 💾 Commit & push results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add patch-results/*
          git commit -m "Windows patch scan results" || echo "No changes to commit"
          git push
